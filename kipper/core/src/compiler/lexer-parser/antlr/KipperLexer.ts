// Generated from ./KipperLexer.g4 by ANTLR 4.9.0-SNAPSHOT

import KipperLexerBase from "./base/KipperLexerBase";

import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";

export class KipperLexer extends KipperLexerBase {
	public static readonly FStringExpStart = 1;
	public static readonly BlockComment = 2;
	public static readonly LineComment = 3;
	public static readonly Pragma = 4;
	public static readonly InstanceOf = 5;
	public static readonly Const = 6;
	public static readonly Var = 7;
	public static readonly As = 8;
	public static readonly Spread = 9;
	public static readonly Switch = 10;
	public static readonly Case = 11;
	public static readonly Default = 12;
	public static readonly Break = 13;
	public static readonly Continue = 14;
	public static readonly Do = 15;
	public static readonly While = 16;
	public static readonly If = 17;
	public static readonly Else = 18;
	public static readonly For = 19;
	public static readonly Enum = 20;
	public static readonly DefFunc = 21;
	public static readonly Return = 22;
	public static readonly CallFunc = 23;
	public static readonly RetIndicator = 24;
	public static readonly Class = 25;
	public static readonly Interface = 26;
	public static readonly Constructor = 27;
	public static readonly New = 28;
	public static readonly True = 29;
	public static readonly False = 30;
	public static readonly Matches = 31;
	public static readonly Typeof = 32;
	public static readonly Try = 33;
	public static readonly Catch = 34;
	public static readonly Finally = 35;
	public static readonly Void = 36;
	public static readonly Null = 37;
	public static readonly Undefined = 38;
	public static readonly Comma = 39;
	public static readonly SemiColon = 40;
	public static readonly QuestionMark = 41;
	public static readonly Colon = 42;
	public static readonly LeftParen = 43;
	public static readonly RightParen = 44;
	public static readonly LeftBracket = 45;
	public static readonly RightBracket = 46;
	public static readonly FStringExpEnd = 47;
	public static readonly LeftBrace = 48;
	public static readonly RightBrace = 49;
	public static readonly Plus = 50;
	public static readonly PlusPlus = 51;
	public static readonly Minus = 52;
	public static readonly MinusMinus = 53;
	public static readonly Star = 54;
	public static readonly Div = 55;
	public static readonly Mod = 56;
	public static readonly PowerTo = 57;
	public static readonly AndAnd = 58;
	public static readonly OrOr = 59;
	public static readonly Not = 60;
	public static readonly Assign = 61;
	public static readonly PlusAssign = 62;
	public static readonly MinusAssign = 63;
	public static readonly StarAssign = 64;
	public static readonly DivAssign = 65;
	public static readonly ModAssign = 66;
	public static readonly Equal = 67;
	public static readonly NotEqual = 68;
	public static readonly Less = 69;
	public static readonly LessEqual = 70;
	public static readonly Greater = 71;
	public static readonly GreaterEqual = 72;
	public static readonly BitwiseAnd = 73;
	public static readonly BitwiseOr = 74;
	public static readonly BitwiseXor = 75;
	public static readonly BitwiseNot = 76;
	public static readonly BitwiseZeroFillLeftShift = 77;
	public static readonly BitwiseSignedRightShift = 78;
	public static readonly BitwiseZeroFillRightShift = 79;
	public static readonly Dot = 80;
	public static readonly Identifier = 81;
	public static readonly IntegerConstant = 82;
	public static readonly SingleQuoteStringLiteral = 83;
	public static readonly DoubleQuoteStringLiteral = 84;
	public static readonly FloatingConstant = 85;
	public static readonly Whitespace = 86;
	public static readonly Newline = 87;
	public static readonly FStringSingleQuoteStart = 88;
	public static readonly FStringDoubleQuoteStart = 89;
	public static readonly FStringSingleQuoteEnd = 90;
	public static readonly FStringSingleQuoteAtom = 91;
	public static readonly FStringDoubleQuoteEnd = 92;
	public static readonly FStringDoubleQuoteAtom = 93;
	public static readonly COMMENT = 2;
	public static readonly PRAGMA = 3;
	public static readonly SINGLE_QUOTE_FSTRING = 1;
	public static readonly DOUBLE_QUOTE_FSTRING = 2;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN", "COMMENT", "PRAGMA"];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = ["DEFAULT_MODE", "SINGLE_QUOTE_FSTRING", "DOUBLE_QUOTE_FSTRING"];

	public static readonly ruleNames: string[] = [
		"BlockComment",
		"LineComment",
		"Pragma",
		"InstanceOf",
		"Const",
		"Var",
		"As",
		"Spread",
		"Switch",
		"Case",
		"Default",
		"Break",
		"Continue",
		"Do",
		"While",
		"If",
		"Else",
		"For",
		"Enum",
		"DefFunc",
		"Return",
		"CallFunc",
		"RetIndicator",
		"Class",
		"Interface",
		"Constructor",
		"New",
		"True",
		"False",
		"Matches",
		"Typeof",
		"Try",
		"Catch",
		"Finally",
		"Void",
		"Null",
		"Undefined",
		"Comma",
		"SemiColon",
		"QuestionMark",
		"Colon",
		"LeftParen",
		"RightParen",
		"LeftBracket",
		"RightBracket",
		"FStringExpEnd",
		"LeftBrace",
		"RightBrace",
		"Plus",
		"PlusPlus",
		"Minus",
		"MinusMinus",
		"Star",
		"Div",
		"Mod",
		"PowerTo",
		"AndAnd",
		"OrOr",
		"Not",
		"Assign",
		"PlusAssign",
		"MinusAssign",
		"StarAssign",
		"DivAssign",
		"ModAssign",
		"Equal",
		"NotEqual",
		"Less",
		"LessEqual",
		"Greater",
		"GreaterEqual",
		"BitwiseAnd",
		"BitwiseOr",
		"BitwiseXor",
		"BitwiseNot",
		"BitwiseZeroFillLeftShift",
		"BitwiseSignedRightShift",
		"BitwiseZeroFillRightShift",
		"Dot",
		"Identifier",
		"IntegerConstant",
		"SingleQuoteStringLiteral",
		"DoubleQuoteStringLiteral",
		"FloatingConstant",
		"Whitespace",
		"Newline",
		"FStringSingleQuoteStart",
		"FStringDoubleQuoteStart",
		"FStringSingleQuoteExpStart",
		"FStringSingleQuoteEnd",
		"FStringSingleQuoteAtom",
		"FStringDoubleQuoteExpStart",
		"FStringDoubleQuoteEnd",
		"FStringDoubleQuoteAtom",
		"IdentifierNondigit",
		"Nondigit",
		"Digit",
		"DecimalConstant",
		"BinaryConstant",
		"OctalConstant",
		"HexadecimalConstant",
		"NonzeroDigit",
		"BinaryDigit",
		"OctalDigit",
		"HexadecimalDigit",
		"DecimalFloatingConstant",
		"FractionalConstant",
		"ExponentPart",
		"DigitSequence",
		"Sign",
		"CCharSequence",
		"CChar",
		"EscapeSequence",
		"SimpleEscapeSequence",
		"OctalEscapeSequence",
		"HexadecimalEscapeSequence",
		"SingleQuoteFStringSCharSequence",
		"SingleQuoteFStringSChar",
		"DoubleQuoteFStringSCharSequence",
		"DoubleQuoteFStringSChar",
		"SingleQuoteSCharSequence",
		"SingleQuoteSChar",
		"DoubleQuoteSCharSequence",
		"DoubleQuoteSChar",
		"CommentContent",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined,
		undefined,
		undefined,
		undefined,
		undefined,
		"'instanceof'",
		"'const'",
		"'var'",
		"'as'",
		"'...'",
		"'switch'",
		"'case'",
		"'default'",
		"'break'",
		"'continue'",
		"'do'",
		"'while'",
		"'if'",
		"'else'",
		"'for'",
		"'enum'",
		"'def'",
		"'return'",
		"'call'",
		"'->'",
		"'class'",
		"'interface'",
		"'constructor'",
		"'new'",
		"'true'",
		"'false'",
		"'matches'",
		"'typeof'",
		"'try'",
		"'catch'",
		"'finally'",
		"'void'",
		"'null'",
		"'undefined'",
		"','",
		"';'",
		"'?'",
		"':'",
		"'('",
		"')'",
		"'['",
		"']'",
		undefined,
		"'{'",
		"'}'",
		"'+'",
		"'++'",
		"'-'",
		"'--'",
		"'*'",
		"'/'",
		"'%'",
		"'**'",
		"'&&'",
		"'||'",
		"'!'",
		"'='",
		"'+='",
		"'-='",
		"'*='",
		"'/='",
		"'%='",
		"'=='",
		"'!='",
		"'<'",
		"'<='",
		"'>'",
		"'>='",
		"'&'",
		"'|'",
		"'^'",
		"'~'",
		"'<<'",
		"'>>'",
		"'>>>'",
		"'.'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined,
		"FStringExpStart",
		"BlockComment",
		"LineComment",
		"Pragma",
		"InstanceOf",
		"Const",
		"Var",
		"As",
		"Spread",
		"Switch",
		"Case",
		"Default",
		"Break",
		"Continue",
		"Do",
		"While",
		"If",
		"Else",
		"For",
		"Enum",
		"DefFunc",
		"Return",
		"CallFunc",
		"RetIndicator",
		"Class",
		"Interface",
		"Constructor",
		"New",
		"True",
		"False",
		"Matches",
		"Typeof",
		"Try",
		"Catch",
		"Finally",
		"Void",
		"Null",
		"Undefined",
		"Comma",
		"SemiColon",
		"QuestionMark",
		"Colon",
		"LeftParen",
		"RightParen",
		"LeftBracket",
		"RightBracket",
		"FStringExpEnd",
		"LeftBrace",
		"RightBrace",
		"Plus",
		"PlusPlus",
		"Minus",
		"MinusMinus",
		"Star",
		"Div",
		"Mod",
		"PowerTo",
		"AndAnd",
		"OrOr",
		"Not",
		"Assign",
		"PlusAssign",
		"MinusAssign",
		"StarAssign",
		"DivAssign",
		"ModAssign",
		"Equal",
		"NotEqual",
		"Less",
		"LessEqual",
		"Greater",
		"GreaterEqual",
		"BitwiseAnd",
		"BitwiseOr",
		"BitwiseXor",
		"BitwiseNot",
		"BitwiseZeroFillLeftShift",
		"BitwiseSignedRightShift",
		"BitwiseZeroFillRightShift",
		"Dot",
		"Identifier",
		"IntegerConstant",
		"SingleQuoteStringLiteral",
		"DoubleQuoteStringLiteral",
		"FloatingConstant",
		"Whitespace",
		"Newline",
		"FStringSingleQuoteStart",
		"FStringDoubleQuoteStart",
		"FStringSingleQuoteEnd",
		"FStringSingleQuoteAtom",
		"FStringDoubleQuoteEnd",
		"FStringDoubleQuoteAtom",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(
		KipperLexer._LITERAL_NAMES,
		KipperLexer._SYMBOLIC_NAMES,
		[],
	);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return KipperLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace

	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(KipperLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string {
		return "KipperLexer.g4";
	}

	// @Override
	public get ruleNames(): string[] {
		return KipperLexer.ruleNames;
	}

	// @Override
	public get serializedATN(): string {
		return KipperLexer._serializedATN;
	}

	// @Override
	public get channelNames(): string[] {
		return KipperLexer.channelNames;
	}

	// @Override
	public get modeNames(): string[] {
		return KipperLexer.modeNames;
	}

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
			case 86:
				this.FStringSingleQuoteStart_action(_localctx, actionIndex);
				break;

			case 87:
				this.FStringDoubleQuoteStart_action(_localctx, actionIndex);
				break;

			case 89:
				this.FStringSingleQuoteEnd_action(_localctx, actionIndex);
				break;

			case 92:
				this.FStringDoubleQuoteEnd_action(_localctx, actionIndex);
				break;
		}
	}
	private FStringSingleQuoteStart_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
			case 0:
				this.incrementFStringDepth();
				break;
		}
	}
	private FStringDoubleQuoteStart_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
			case 1:
				this.incrementFStringDepth();
				break;
		}
	}
	private FStringSingleQuoteEnd_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
			case 2:
				this.decrementFStringDepth();
				break;
		}
	}
	private FStringDoubleQuoteEnd_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
			case 3:
				this.decrementFStringDepth();
				break;
		}
	}
	// @Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
			case 45:
				return this.FStringExpEnd_sempred(_localctx, predIndex);

			case 88:
				return this.FStringSingleQuoteExpStart_sempred(_localctx, predIndex);

			case 91:
				return this.FStringDoubleQuoteExpStart_sempred(_localctx, predIndex);
		}
		return true;
	}
	private FStringExpEnd_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
			case 0:
				return this.insideFString();
		}
		return true;
	}
	private FStringSingleQuoteExpStart_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
			case 1:
				return this.insideFString();
		}
		return true;
	}
	private FStringDoubleQuoteExpStart_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
			case 2:
				return this.insideFString();
		}
		return true;
	}

	private static readonly _serializedATNSegments: number = 2;
	private static readonly _serializedATNSegment0: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02_\u0337\b\x01" +
		"\b\x01\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04" +
		"\x06\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f" +
		"\t\f\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11" +
		"\x04\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16" +
		"\x04\x17\t\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B" +
		"\x04\x1C\t\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!" +
		"\t!\x04\"\t\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04'\t'\x04(\t(\x04)\t" +
		")\x04*\t*\x04+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x04" +
		"2\t2\x043\t3\x044\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04" +
		";\t;\x04<\t<\x04=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04" +
		"D\tD\x04E\tE\x04F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04" +
		"M\tM\x04N\tN\x04O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x04" +
		"V\tV\x04W\tW\x04X\tX\x04Y\tY\x04Z\tZ\x04[\t[\x04\\\t\\\x04]\t]\x04^\t" +
		"^\x04_\t_\x04`\t`\x04a\ta\x04b\tb\x04c\tc\x04d\td\x04e\te\x04f\tf\x04" +
		"g\tg\x04h\th\x04i\ti\x04j\tj\x04k\tk\x04l\tl\x04m\tm\x04n\tn\x04o\to\x04" +
		"p\tp\x04q\tq\x04r\tr\x04s\ts\x04t\tt\x04u\tu\x04v\tv\x04w\tw\x04x\tx\x04" +
		"y\ty\x04z\tz\x04{\t{\x04|\t|\x04}\t}\x04~\t~\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x07\x02\u0104\n\x02\f\x02\x0E\x02\u0107\v\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b" +
		"\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03" +
		"\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12" +
		"\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19" +
		"\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B" +
		"\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C" +
		"\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F" +
		"\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03" +
		'!\x03"\x03"\x03"\x03"\x03"\x03"\x03#\x03#\x03#\x03#\x03#\x03#\x03' +
		"#\x03#\x03$\x03$\x03$\x03$\x03$\x03%\x03%\x03%\x03%\x03%\x03&\x03&\x03" +
		"&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03'\x03'\x03(\x03(\x03)\x03)\x03" +
		"*\x03*\x03+\x03+\x03,\x03,\x03-\x03-\x03.\x03.\x03/\x03/\x03/\x03/\x03" +
		"/\x030\x030\x031\x031\x032\x032\x033\x033\x033\x034\x034\x035\x035\x03" +
		"5\x036\x036\x037\x037\x038\x038\x039\x039\x039\x03:\x03:\x03:\x03;\x03" +
		";\x03;\x03<\x03<\x03=\x03=\x03>\x03>\x03>\x03?\x03?\x03?\x03@\x03@\x03" +
		"@\x03A\x03A\x03A\x03B\x03B\x03B\x03C\x03C\x03C\x03D\x03D\x03D\x03E\x03" +
		"E\x03F\x03F\x03F\x03G\x03G\x03H\x03H\x03H\x03I\x03I\x03J\x03J\x03K\x03" +
		"K\x03L\x03L\x03M\x03M\x03M\x03N\x03N\x03N\x03O\x03O\x03O\x03O\x03P\x03" +
		"P\x03Q\x03Q\x03Q\x07Q\u0259\nQ\fQ\x0EQ\u025C\vQ\x03R\x03R\x03R\x03R\x05" +
		"R\u0262\nR\x03S\x03S\x05S\u0266\nS\x03S\x03S\x03T\x03T\x05T\u026C\nT\x03" +
		"T\x03T\x03U\x03U\x03V\x06V\u0273\nV\rV\x0EV\u0274\x03V\x03V\x03W\x03W" +
		"\x03W\x03W\x03X\x03X\x03X\x03X\x03X\x03X\x03X\x03Y\x03Y\x03Y\x03Y\x03" +
		"Y\x03Y\x03Y\x03Z\x03Z\x03Z\x03Z\x03Z\x03Z\x03[\x03[\x03[\x03[\x03[\x03" +
		"\\\x03\\\x03]\x03]\x03]\x03]\x03]\x03]\x03^\x03^\x03^\x03^\x03^\x03_\x03" +
		"_\x03`\x03`\x03a\x03a\x03b\x03b\x03c\x06c\u02AC\nc\rc\x0Ec\u02AD\x03d" +
		"\x03d\x03d\x06d\u02B3\nd\rd\x0Ed\u02B4\x03e\x03e\x03e\x06e\u02BA\ne\r" +
		"e\x0Ee\u02BB\x03f\x03f\x03f\x06f\u02C1\nf\rf\x0Ef\u02C2\x03g\x03g\x03" +
		"h\x03h\x03i\x03i\x03j\x03j\x03k\x03k\x05k\u02CF\nk\x03k\x03k\x03k\x05" +
		"k\u02D4\nk\x03l\x05l\u02D7\nl\x03l\x03l\x03l\x03l\x03l\x05l\u02DE\nl\x03" +
		"m\x03m\x05m\u02E2\nm\x03m\x03m\x03n\x06n\u02E7\nn\rn\x0En\u02E8\x03o\x03" +
		"o\x03p\x06p\u02EE\np\rp\x0Ep\u02EF\x03q\x03q\x05q\u02F4\nq\x03r\x03r\x03" +
		"r\x05r\u02F9\nr\x03s\x03s\x03s\x03t\x03t\x03t\x05t\u0301\nt\x03t\x05t" +
		"\u0304\nt\x03u\x03u\x03u\x03u\x06u\u030A\nu\ru\x0Eu\u030B\x03v\x06v\u030F" +
		"\nv\rv\x0Ev\u0310\x03w\x03w\x05w\u0315\nw\x03x\x06x\u0318\nx\rx\x0Ex\u0319" +
		"\x03y\x03y\x05y\u031E\ny\x03z\x06z\u0321\nz\rz\x0Ez\u0322\x03{\x03{\x05" +
		"{\u0327\n{\x03|\x06|\u032A\n|\r|\x0E|\u032B\x03}\x03}\x05}\u0330\n}\x03" +
		"~\x07~\u0333\n~\f~\x0E~\u0336\v~\x03\u0105\x02\x02\x7F\x05\x02\x04\x07" +
		"\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15" +
		"\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02" +
		"\x12#\x02\x13%\x02\x14'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191" +
		"\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02" +
		"\"C\x02#E\x02$G\x02%I\x02&K\x02'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-" +
		"Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x024g\x025i\x026k\x027m\x028o\x02" +
		"9q\x02:s\x02;u\x02<w\x02=y\x02>{\x02?}\x02@\x7F\x02A\x81\x02B\x83\x02" +
		"C\x85\x02D\x87\x02E\x89\x02F\x8B\x02G\x8D\x02H\x8F\x02I\x91\x02J\x93\x02" +
		"K\x95\x02L\x97\x02M\x99\x02N\x9B\x02O\x9D\x02P\x9F\x02Q\xA1\x02R\xA3\x02" +
		"S\xA5\x02T\xA7\x02U\xA9\x02V\xAB\x02W\xAD\x02X\xAF\x02Y\xB1\x02Z\xB3\x02" +
		"[\xB5\x02\x02\xB7\x02\\\xB9\x02]\xBB\x02\x02\xBD\x02^\xBF\x02_\xC1\x02" +
		"\x02\xC3\x02\x02\xC5\x02\x02\xC7\x02\x02\xC9\x02\x02\xCB\x02\x02\xCD\x02" +
		"\x02\xCF\x02\x02\xD1\x02\x02\xD3\x02\x02\xD5\x02\x02\xD7\x02\x02\xD9\x02" +
		"\x02\xDB\x02\x02\xDD\x02\x02\xDF\x02\x02\xE1\x02\x02\xE3\x02\x02\xE5\x02" +
		"\x02\xE7\x02\x02\xE9\x02\x02\xEB\x02\x02\xED\x02\x02\xEF\x02\x02\xF1\x02" +
		"\x02\xF3\x02\x02\xF5\x02\x02\xF7\x02\x02\xF9\x02\x02\xFB\x02\x02\xFD\x02" +
		'\x02\x05\x02\x03\x04\x14\x06\x02\v\v\r\x0E""\xA2\xA2\x05\x02\f\f\x0F' +
		"\x0F\u202A\u202B\x05\x02C\\aac|\x03\x022;\x04\x02DDdd\x04\x02QQqq\x04" +
		"\x02ZZzz\x03\x023;\x03\x0223\x03\x0229\x05\x022;CHch\x04\x02GGgg\x04\x02" +
		"--//\x06\x02\f\f\x0F\x0F))^^\x0E\x02$$))AA^^cdhhppttvvxx}}\x7F\x7F\b\x02" +
		"\f\f\x0F\x0F))^^}}\x7F\x7F\b\x02\f\f\x0F\x0F$$^^}}\x7F\x7F\x06\x02\f\f" +
		"\x0F\x0F$$^^\x02\u0338\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02" +
		"\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02" +
		"\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02" +
		"\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02" +
		"\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02" +
		"!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02'\x03" +
		"\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02" +
		"\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x02" +
		"5\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02" +
		"\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02" +
		"\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03" +
		"\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02" +
		"\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02" +
		"W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02" +
		"\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02" +
		"\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03" +
		"\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02q\x03\x02\x02" +
		"\x02\x02s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02\x02\x02\x02" +
		"y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02\x02\x7F\x03" +
		"\x02\x02\x02\x02\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02\x02\x02\x85\x03" +
		"\x02\x02\x02\x02\x87\x03\x02\x02\x02\x02\x89\x03\x02\x02\x02\x02\x8B\x03" +
		"\x02\x02\x02\x02\x8D\x03\x02\x02\x02\x02\x8F\x03\x02\x02\x02\x02\x91\x03" +
		"\x02\x02\x02\x02\x93\x03\x02\x02\x02\x02\x95\x03\x02\x02\x02\x02\x97\x03" +
		"\x02\x02\x02\x02\x99\x03\x02\x02\x02\x02\x9B\x03\x02\x02\x02\x02\x9D\x03" +
		"\x02\x02\x02\x02\x9F\x03\x02\x02\x02\x02\xA1\x03\x02\x02\x02\x02\xA3\x03" +
		"\x02\x02\x02\x02\xA5\x03\x02\x02\x02\x02\xA7\x03\x02\x02\x02\x02\xA9\x03" +
		"\x02\x02\x02\x02\xAB\x03\x02\x02\x02\x02\xAD\x03\x02\x02\x02\x02\xAF\x03" +
		"\x02\x02\x02\x02\xB1\x03\x02\x02\x02\x02\xB3\x03\x02\x02\x02\x03\xB5\x03" +
		"\x02\x02\x02\x03\xB7\x03\x02\x02\x02\x03\xB9\x03\x02\x02\x02\x04\xBB\x03" +
		"\x02\x02\x02\x04\xBD\x03\x02\x02\x02\x04\xBF\x03\x02\x02\x02\x05\xFF\x03" +
		"\x02\x02\x02\x07\u010D\x03\x02\x02\x02\t\u0114\x03\x02\x02\x02\v\u0120" +
		"\x03\x02\x02\x02\r\u012B\x03\x02\x02\x02\x0F\u0131\x03\x02\x02\x02\x11" +
		"\u0135\x03\x02\x02\x02\x13\u0138\x03\x02\x02\x02\x15\u013C\x03\x02\x02" +
		"\x02\x17\u0143\x03\x02\x02\x02\x19\u0148\x03\x02\x02\x02\x1B\u0150\x03" +
		"\x02\x02\x02\x1D\u0156\x03\x02\x02\x02\x1F\u015F\x03\x02\x02\x02!\u0162" +
		"\x03\x02\x02\x02#\u0168\x03\x02\x02\x02%\u016B\x03\x02\x02\x02'\u0170" +
		"\x03\x02\x02\x02)\u0174\x03\x02\x02\x02+\u0179\x03\x02\x02\x02-\u017D" +
		"\x03\x02\x02\x02/\u0184\x03\x02\x02\x021\u0189\x03\x02\x02\x023\u018C" +
		"\x03\x02\x02\x025\u0192\x03\x02\x02\x027\u019C\x03\x02\x02\x029\u01A8" +
		"\x03\x02\x02\x02;\u01AC\x03\x02\x02\x02=\u01B1\x03\x02\x02\x02?\u01B7" +
		"\x03\x02\x02\x02A\u01BF\x03\x02\x02\x02C\u01C6\x03\x02\x02\x02E\u01CA" +
		"\x03\x02\x02\x02G\u01D0\x03\x02\x02\x02I\u01D8\x03\x02\x02\x02K\u01DD" +
		"\x03\x02\x02\x02M\u01E2\x03\x02\x02\x02O\u01EC\x03\x02\x02\x02Q\u01EE" +
		"\x03\x02\x02\x02S\u01F0\x03\x02\x02\x02U\u01F2\x03\x02\x02\x02W\u01F4" +
		"\x03\x02\x02\x02Y\u01F6\x03\x02\x02\x02[\u01F8\x03\x02\x02\x02]\u01FA" +
		"\x03\x02\x02\x02_\u01FC\x03\x02\x02\x02a\u0201\x03\x02\x02\x02c\u0203" +
		"\x03\x02\x02\x02e\u0205\x03\x02\x02\x02g\u0207\x03\x02\x02\x02i\u020A" +
		"\x03\x02\x02\x02k\u020C\x03\x02\x02\x02m\u020F\x03\x02\x02\x02o\u0211" +
		"\x03\x02\x02\x02q\u0213\x03\x02\x02\x02s\u0215\x03\x02\x02\x02u\u0218" +
		"\x03\x02\x02\x02w\u021B\x03\x02\x02\x02y\u021E\x03\x02\x02\x02{\u0220" +
		"\x03\x02\x02\x02}\u0222\x03\x02\x02\x02\x7F\u0225\x03\x02\x02\x02\x81" +
		"\u0228\x03\x02\x02\x02\x83\u022B\x03\x02\x02\x02\x85\u022E\x03\x02\x02" +
		"\x02\x87\u0231\x03\x02\x02\x02\x89\u0234\x03\x02\x02\x02\x8B\u0237\x03" +
		"\x02\x02\x02\x8D\u0239\x03\x02\x02\x02\x8F\u023C\x03\x02\x02\x02\x91\u023E" +
		"\x03\x02\x02\x02\x93\u0241\x03\x02\x02\x02\x95\u0243\x03\x02\x02\x02\x97" +
		"\u0245\x03\x02\x02\x02\x99\u0247\x03\x02\x02\x02\x9B\u0249\x03\x02\x02" +
		"\x02\x9D\u024C\x03\x02\x02\x02\x9F\u024F\x03\x02\x02\x02\xA1\u0253\x03" +
		"\x02\x02\x02\xA3\u0255\x03\x02\x02\x02\xA5\u0261\x03\x02\x02\x02\xA7\u0263" +
		"\x03\x02\x02\x02\xA9\u0269\x03\x02\x02\x02\xAB\u026F\x03\x02\x02\x02\xAD" +
		"\u0272\x03\x02\x02\x02\xAF\u0278\x03\x02\x02\x02\xB1\u027C\x03\x02\x02" +
		"\x02\xB3\u0283\x03\x02\x02\x02\xB5\u028A\x03\x02\x02\x02\xB7\u0290\x03" +
		"\x02\x02\x02\xB9\u0295\x03\x02\x02\x02\xBB\u0297\x03\x02\x02\x02\xBD\u029D" +
		"\x03\x02\x02\x02\xBF\u02A2\x03\x02\x02\x02\xC1\u02A4\x03\x02\x02\x02\xC3" +
		"\u02A6\x03\x02\x02\x02\xC5\u02A8\x03\x02\x02\x02\xC7\u02AB\x03\x02\x02" +
		"\x02\xC9\u02AF\x03\x02\x02\x02\xCB\u02B6\x03\x02\x02\x02\xCD\u02BD\x03" +
		"\x02\x02\x02\xCF\u02C4\x03\x02\x02\x02\xD1\u02C6\x03\x02\x02\x02\xD3\u02C8" +
		"\x03\x02\x02\x02\xD5\u02CA\x03\x02\x02\x02\xD7\u02D3\x03\x02\x02\x02\xD9" +
		"\u02DD\x03\x02\x02\x02\xDB\u02DF\x03\x02\x02\x02\xDD\u02E6\x03\x02\x02" +
		"\x02\xDF\u02EA\x03\x02\x02\x02\xE1\u02ED\x03\x02\x02\x02\xE3\u02F3\x03" +
		"\x02\x02\x02\xE5\u02F8\x03\x02\x02\x02\xE7\u02FA\x03\x02\x02\x02\xE9\u02FD" +
		"\x03\x02\x02\x02\xEB\u0305\x03\x02\x02\x02\xED\u030E\x03\x02\x02\x02\xEF" +
		"\u0314\x03\x02\x02\x02\xF1\u0317\x03\x02\x02\x02\xF3\u031D\x03\x02\x02" +
		"\x02\xF5\u0320\x03\x02\x02\x02\xF7\u0326\x03\x02\x02\x02\xF9\u0329\x03" +
		"\x02\x02\x02\xFB\u032F\x03\x02\x02\x02\xFD\u0334\x03\x02\x02\x02\xFF\u0100" +
		"\x071\x02\x02\u0100\u0101\x07,\x02\x02\u0101\u0105\x03\x02\x02\x02\u0102" +
		"\u0104\v\x02\x02\x02\u0103\u0102\x03\x02\x02\x02\u0104\u0107\x03\x02\x02" +
		"\x02\u0105\u0106\x03\x02\x02\x02\u0105\u0103\x03\x02\x02\x02\u0106\u0108" +
		"\x03\x02\x02\x02\u0107\u0105\x03\x02\x02\x02\u0108\u0109\x07,\x02\x02" +
		"\u0109\u010A\x071\x02\x02\u010A\u010B\x03\x02\x02\x02\u010B\u010C\b\x02" +
		"\x02\x02\u010C\x06\x03\x02\x02\x02\u010D\u010E\x071\x02\x02\u010E\u010F" +
		"\x071\x02\x02\u010F\u0110\x03\x02\x02\x02\u0110\u0111\x05\xFD~\x02\u0111" +
		"\u0112\x03\x02\x02\x02\u0112\u0113\b\x03\x02\x02\u0113\b\x03\x02\x02\x02" +
		"\u0114\u0115\x07%\x02\x02\u0115\u0116\x07r\x02\x02\u0116\u0117\x07t\x02" +
		"\x02\u0117\u0118\x07c\x02\x02\u0118\u0119\x07i\x02\x02\u0119\u011A\x07" +
		"o\x02\x02\u011A\u011B\x07c\x02\x02\u011B\u011C\x03\x02\x02\x02\u011C\u011D" +
		"\x05\xFD~\x02\u011D\u011E\x03\x02\x02\x02\u011E\u011F\b\x04\x03\x02\u011F" +
		"\n\x03\x02\x02\x02\u0120\u0121\x07k\x02\x02\u0121\u0122\x07p\x02\x02\u0122" +
		"\u0123\x07u\x02\x02\u0123\u0124\x07v\x02\x02\u0124\u0125\x07c\x02\x02" +
		"\u0125\u0126\x07p\x02\x02\u0126\u0127\x07e\x02\x02\u0127\u0128\x07g\x02" +
		"\x02\u0128\u0129\x07q\x02\x02\u0129\u012A\x07h\x02\x02\u012A\f\x03\x02" +
		"\x02\x02\u012B\u012C\x07e\x02\x02\u012C\u012D\x07q\x02\x02\u012D\u012E" +
		"\x07p\x02\x02\u012E\u012F\x07u\x02\x02\u012F\u0130\x07v\x02\x02\u0130" +
		"\x0E\x03\x02\x02\x02\u0131\u0132\x07x\x02\x02\u0132\u0133\x07c\x02\x02" +
		"\u0133\u0134\x07t\x02\x02\u0134\x10\x03\x02\x02\x02\u0135\u0136\x07c\x02" +
		"\x02\u0136\u0137\x07u\x02\x02\u0137\x12\x03\x02\x02\x02\u0138\u0139\x07" +
		"0\x02\x02\u0139\u013A\x070\x02\x02\u013A\u013B\x070\x02\x02\u013B\x14" +
		"\x03\x02\x02\x02\u013C\u013D\x07u\x02\x02\u013D\u013E\x07y\x02\x02\u013E" +
		"\u013F\x07k\x02\x02\u013F\u0140\x07v\x02\x02\u0140\u0141\x07e\x02\x02" +
		"\u0141\u0142\x07j\x02\x02\u0142\x16\x03\x02\x02\x02\u0143\u0144\x07e\x02" +
		"\x02\u0144\u0145\x07c\x02\x02\u0145\u0146\x07u\x02\x02\u0146\u0147\x07" +
		"g\x02\x02\u0147\x18\x03\x02\x02\x02\u0148\u0149\x07f\x02\x02\u0149\u014A" +
		"\x07g\x02\x02\u014A\u014B\x07h\x02\x02\u014B\u014C\x07c\x02\x02\u014C" +
		"\u014D\x07w\x02\x02\u014D\u014E\x07n\x02\x02\u014E\u014F\x07v\x02\x02" +
		"\u014F\x1A\x03\x02\x02\x02\u0150\u0151\x07d\x02\x02\u0151\u0152\x07t\x02" +
		"\x02\u0152\u0153\x07g\x02\x02\u0153\u0154\x07c\x02\x02\u0154\u0155\x07" +
		"m\x02\x02\u0155\x1C\x03\x02\x02\x02\u0156\u0157\x07e\x02\x02\u0157\u0158" +
		"\x07q\x02\x02\u0158\u0159\x07p\x02\x02\u0159\u015A\x07v\x02\x02\u015A" +
		"\u015B\x07k\x02\x02\u015B\u015C\x07p\x02\x02\u015C\u015D\x07w\x02\x02" +
		"\u015D\u015E\x07g\x02\x02\u015E\x1E\x03\x02\x02\x02\u015F\u0160\x07f\x02" +
		"\x02\u0160\u0161\x07q\x02\x02\u0161 \x03\x02\x02\x02\u0162\u0163\x07y" +
		"\x02\x02\u0163\u0164\x07j\x02\x02\u0164\u0165\x07k\x02\x02\u0165\u0166" +
		'\x07n\x02\x02\u0166\u0167\x07g\x02\x02\u0167"\x03\x02\x02\x02\u0168\u0169' +
		"\x07k\x02\x02\u0169\u016A\x07h\x02\x02\u016A$\x03\x02\x02\x02\u016B\u016C" +
		"\x07g\x02\x02\u016C\u016D\x07n\x02\x02\u016D\u016E\x07u\x02\x02\u016E" +
		"\u016F\x07g\x02\x02\u016F&\x03\x02\x02\x02\u0170\u0171\x07h\x02\x02\u0171" +
		"\u0172\x07q\x02\x02\u0172\u0173\x07t\x02\x02\u0173(\x03\x02\x02\x02\u0174" +
		"\u0175\x07g\x02\x02\u0175\u0176\x07p\x02\x02\u0176\u0177\x07w\x02\x02" +
		"\u0177\u0178\x07o\x02\x02\u0178*\x03\x02\x02\x02\u0179\u017A\x07f\x02" +
		"\x02\u017A\u017B\x07g\x02\x02\u017B\u017C\x07h\x02\x02\u017C,\x03\x02" +
		"\x02\x02\u017D\u017E\x07t\x02\x02\u017E\u017F\x07g\x02\x02\u017F\u0180" +
		"\x07v\x02\x02\u0180\u0181\x07w\x02\x02\u0181\u0182\x07t\x02\x02\u0182" +
		"\u0183\x07p\x02\x02\u0183.\x03\x02\x02\x02\u0184\u0185\x07e\x02\x02\u0185" +
		"\u0186\x07c\x02\x02\u0186\u0187\x07n\x02\x02\u0187\u0188\x07n\x02\x02" +
		"\u01880\x03\x02\x02\x02\u0189\u018A\x07/\x02\x02\u018A\u018B\x07@\x02" +
		"\x02\u018B2\x03\x02\x02\x02\u018C\u018D\x07e\x02\x02\u018D\u018E\x07n" +
		"\x02\x02\u018E\u018F\x07c\x02\x02\u018F\u0190\x07u\x02\x02\u0190\u0191" +
		"\x07u\x02\x02\u01914\x03\x02\x02\x02\u0192\u0193\x07k\x02\x02\u0193\u0194" +
		"\x07p\x02\x02\u0194\u0195\x07v\x02\x02\u0195\u0196\x07g\x02\x02\u0196" +
		"\u0197\x07t\x02\x02\u0197\u0198\x07h\x02\x02\u0198\u0199\x07c\x02\x02" +
		"\u0199\u019A\x07e\x02\x02\u019A\u019B\x07g\x02\x02\u019B6\x03\x02\x02" +
		"\x02\u019C\u019D\x07e\x02\x02\u019D\u019E\x07q\x02\x02\u019E\u019F\x07" +
		"p\x02\x02\u019F\u01A0\x07u\x02\x02\u01A0\u01A1\x07v\x02\x02\u01A1\u01A2" +
		"\x07t\x02\x02\u01A2\u01A3\x07w\x02\x02\u01A3\u01A4\x07e\x02\x02\u01A4" +
		"\u01A5\x07v\x02\x02\u01A5\u01A6\x07q\x02\x02\u01A6\u01A7\x07t\x02\x02" +
		"\u01A78\x03\x02\x02\x02\u01A8\u01A9\x07p\x02\x02\u01A9\u01AA\x07g\x02" +
		"\x02\u01AA\u01AB\x07y\x02\x02\u01AB:\x03\x02\x02\x02\u01AC\u01AD\x07v" +
		"\x02\x02\u01AD\u01AE\x07t\x02\x02\u01AE\u01AF\x07w\x02\x02\u01AF\u01B0" +
		"\x07g\x02\x02\u01B0<\x03\x02\x02\x02\u01B1\u01B2\x07h\x02\x02\u01B2\u01B3" +
		"\x07c\x02\x02\u01B3\u01B4\x07n\x02\x02\u01B4\u01B5\x07u\x02\x02\u01B5" +
		"\u01B6\x07g\x02\x02\u01B6>\x03\x02\x02\x02\u01B7\u01B8\x07o\x02\x02\u01B8" +
		"\u01B9\x07c\x02\x02\u01B9\u01BA\x07v\x02\x02\u01BA\u01BB\x07e\x02\x02" +
		"\u01BB\u01BC\x07j\x02\x02\u01BC\u01BD\x07g\x02\x02\u01BD\u01BE\x07u\x02" +
		"\x02\u01BE@\x03\x02\x02\x02\u01BF\u01C0\x07v\x02\x02\u01C0\u01C1\x07{" +
		"\x02\x02\u01C1\u01C2\x07r\x02\x02\u01C2\u01C3\x07g\x02\x02\u01C3\u01C4" +
		"\x07q\x02\x02\u01C4\u01C5\x07h\x02\x02\u01C5B\x03\x02\x02\x02\u01C6\u01C7" +
		"\x07v\x02\x02\u01C7\u01C8\x07t\x02\x02\u01C8\u01C9\x07{\x02\x02\u01C9" +
		"D\x03\x02\x02\x02\u01CA\u01CB\x07e\x02\x02\u01CB\u01CC\x07c\x02\x02\u01CC" +
		"\u01CD\x07v\x02\x02\u01CD\u01CE\x07e\x02\x02\u01CE\u01CF\x07j\x02\x02" +
		"\u01CFF\x03\x02\x02\x02\u01D0\u01D1\x07h\x02\x02\u01D1\u01D2\x07k\x02" +
		"\x02\u01D2\u01D3\x07p\x02\x02\u01D3\u01D4\x07c\x02\x02\u01D4\u01D5\x07" +
		"n\x02\x02\u01D5\u01D6\x07n\x02\x02\u01D6\u01D7\x07{\x02\x02\u01D7H\x03" +
		"\x02\x02\x02\u01D8\u01D9\x07x\x02\x02\u01D9\u01DA\x07q\x02\x02\u01DA\u01DB" +
		"\x07k\x02\x02\u01DB\u01DC\x07f\x02\x02\u01DCJ\x03\x02\x02\x02\u01DD\u01DE" +
		"\x07p\x02\x02\u01DE\u01DF\x07w\x02\x02\u01DF\u01E0\x07n\x02\x02\u01E0" +
		"\u01E1\x07n\x02\x02\u01E1L\x03\x02\x02\x02\u01E2\u01E3\x07w\x02\x02\u01E3" +
		"\u01E4\x07p\x02\x02\u01E4\u01E5\x07f\x02\x02\u01E5\u01E6\x07g\x02\x02" +
		"\u01E6\u01E7\x07h\x02\x02\u01E7\u01E8\x07k\x02\x02\u01E8\u01E9\x07p\x02" +
		"\x02\u01E9\u01EA\x07g\x02\x02\u01EA\u01EB\x07f\x02\x02\u01EBN\x03\x02" +
		"\x02\x02\u01EC\u01ED\x07.\x02\x02\u01EDP\x03\x02\x02\x02\u01EE\u01EF\x07" +
		"=\x02";
	private static readonly _serializedATNSegment1: string =
		"\x02\u01EFR\x03\x02\x02\x02\u01F0\u01F1\x07A\x02\x02\u01F1T\x03\x02\x02" +
		"\x02\u01F2\u01F3\x07<\x02\x02\u01F3V\x03\x02\x02\x02\u01F4\u01F5\x07*" +
		"\x02\x02\u01F5X\x03\x02\x02\x02\u01F6\u01F7\x07+\x02\x02\u01F7Z\x03\x02" +
		"\x02\x02\u01F8\u01F9\x07]\x02\x02\u01F9\\\x03\x02\x02\x02\u01FA\u01FB" +
		"\x07_\x02\x02\u01FB^\x03\x02\x02\x02\u01FC\u01FD\x06/\x02\x02\u01FD\u01FE" +
		"\x07\x7F\x02\x02\u01FE\u01FF\x03\x02\x02\x02\u01FF\u0200\b/\x04\x02\u0200" +
		"`\x03\x02\x02\x02\u0201\u0202\x07}\x02\x02\u0202b\x03\x02\x02\x02\u0203" +
		"\u0204\x07\x7F\x02\x02\u0204d\x03\x02\x02\x02\u0205\u0206\x07-\x02\x02" +
		"\u0206f\x03\x02\x02\x02\u0207\u0208\x07-\x02\x02\u0208\u0209\x07-\x02" +
		"\x02\u0209h\x03\x02\x02\x02\u020A\u020B\x07/\x02\x02\u020Bj\x03\x02\x02" +
		"\x02\u020C\u020D\x07/\x02\x02\u020D\u020E\x07/\x02\x02\u020El\x03\x02" +
		"\x02\x02\u020F\u0210\x07,\x02\x02\u0210n\x03\x02\x02\x02\u0211\u0212\x07" +
		"1\x02\x02\u0212p\x03\x02\x02\x02\u0213\u0214\x07'\x02\x02\u0214r\x03" +
		"\x02\x02\x02\u0215\u0216\x07,\x02\x02\u0216\u0217\x07,\x02\x02\u0217t" +
		"\x03\x02\x02\x02\u0218\u0219\x07(\x02\x02\u0219\u021A\x07(\x02\x02\u021A" +
		"v\x03\x02\x02\x02\u021B\u021C\x07~\x02\x02\u021C\u021D\x07~\x02\x02\u021D" +
		"x\x03\x02\x02\x02\u021E\u021F\x07#\x02\x02\u021Fz\x03\x02\x02\x02\u0220" +
		"\u0221\x07?\x02\x02\u0221|\x03\x02\x02\x02\u0222\u0223\x07-\x02\x02\u0223" +
		"\u0224\x07?\x02\x02\u0224~\x03\x02\x02\x02\u0225\u0226\x07/\x02\x02\u0226" +
		"\u0227\x07?\x02\x02\u0227\x80\x03\x02\x02\x02\u0228\u0229\x07,\x02\x02" +
		"\u0229\u022A\x07?\x02\x02\u022A\x82\x03\x02\x02\x02\u022B\u022C\x071\x02" +
		"\x02\u022C\u022D\x07?\x02\x02\u022D\x84\x03\x02\x02\x02\u022E\u022F\x07" +
		"'\x02\x02\u022F\u0230\x07?\x02\x02\u0230\x86\x03\x02\x02\x02\u0231\u0232" +
		"\x07?\x02\x02\u0232\u0233\x07?\x02\x02\u0233\x88\x03\x02\x02\x02\u0234" +
		"\u0235\x07#\x02\x02\u0235\u0236\x07?\x02\x02\u0236\x8A\x03\x02\x02\x02" +
		"\u0237\u0238\x07>\x02\x02\u0238\x8C\x03\x02\x02\x02\u0239\u023A\x07>\x02" +
		"\x02\u023A\u023B\x07?\x02\x02\u023B\x8E\x03\x02\x02\x02\u023C\u023D\x07" +
		"@\x02\x02\u023D\x90\x03\x02\x02\x02\u023E\u023F\x07@\x02\x02\u023F\u0240" +
		"\x07?\x02\x02\u0240\x92\x03\x02\x02\x02\u0241\u0242\x07(\x02\x02\u0242" +
		"\x94\x03\x02\x02\x02\u0243\u0244\x07~\x02\x02\u0244\x96\x03\x02\x02\x02" +
		"\u0245\u0246\x07`\x02\x02\u0246\x98\x03\x02\x02\x02\u0247\u0248\x07\x80" +
		"\x02\x02\u0248\x9A\x03\x02\x02\x02\u0249\u024A\x07>\x02\x02\u024A\u024B" +
		"\x07>\x02\x02\u024B\x9C\x03\x02\x02\x02\u024C\u024D\x07@\x02\x02\u024D" +
		"\u024E\x07@\x02\x02\u024E\x9E\x03\x02\x02\x02\u024F\u0250\x07@\x02\x02" +
		"\u0250\u0251\x07@\x02\x02\u0251\u0252\x07@\x02\x02\u0252\xA0\x03\x02\x02" +
		"\x02\u0253\u0254\x070\x02\x02\u0254\xA2\x03\x02\x02\x02\u0255\u025A\x05" +
		"\xC1`\x02\u0256\u0259\x05\xC1`\x02\u0257\u0259\x05\xC5b\x02\u0258\u0256" +
		"\x03\x02\x02\x02\u0258\u0257\x03\x02\x02\x02\u0259\u025C\x03\x02\x02\x02" +
		"\u025A\u0258\x03\x02\x02\x02\u025A\u025B\x03\x02\x02\x02\u025B\xA4\x03" +
		"\x02\x02\x02\u025C\u025A\x03\x02\x02\x02\u025D\u0262\x05\xC7c\x02\u025E" +
		"\u0262\x05\xCBe\x02\u025F\u0262\x05\xCDf\x02\u0260\u0262\x05\xC9d\x02" +
		"\u0261\u025D\x03\x02\x02\x02\u0261\u025E\x03\x02\x02\x02\u0261\u025F\x03" +
		"\x02\x02\x02\u0261\u0260\x03\x02\x02\x02\u0262\xA6\x03\x02\x02\x02\u0263" +
		"\u0265\x07)\x02\x02\u0264\u0266\x05\xF5z\x02\u0265\u0264\x03\x02\x02\x02" +
		"\u0265\u0266\x03\x02\x02\x02\u0266\u0267\x03\x02\x02\x02\u0267\u0268\x07" +
		")\x02\x02\u0268\xA8\x03\x02\x02\x02\u0269\u026B\x07$\x02\x02\u026A\u026C" +
		"\x05\xF9|\x02\u026B\u026A\x03\x02\x02\x02\u026B\u026C\x03\x02\x02\x02" +
		"\u026C\u026D\x03\x02\x02\x02\u026D\u026E\x07$\x02\x02\u026E\xAA\x03\x02" +
		"\x02\x02\u026F\u0270\x05\xD7k\x02\u0270\xAC\x03\x02\x02\x02\u0271\u0273" +
		"\t\x02\x02\x02\u0272\u0271\x03\x02\x02\x02\u0273\u0274\x03\x02\x02\x02" +
		"\u0274\u0272\x03\x02\x02\x02\u0274\u0275\x03\x02\x02\x02\u0275\u0276\x03" +
		"\x02\x02\x02\u0276\u0277\bV\x05\x02\u0277\xAE\x03\x02\x02\x02\u0278\u0279" +
		"\t\x03\x02\x02\u0279\u027A\x03\x02\x02\x02\u027A\u027B\bW\x05\x02\u027B" +
		"\xB0\x03\x02\x02\x02\u027C\u027D\x07h\x02\x02\u027D\u027E\x07)\x02\x02" +
		"\u027E\u027F\x03\x02\x02\x02\u027F\u0280\bX\x06\x02\u0280\u0281\x03\x02" +
		"\x02\x02\u0281\u0282\bX\x07\x02\u0282\xB2\x03\x02\x02\x02\u0283\u0284" +
		"\x07h\x02\x02\u0284\u0285\x07$\x02\x02\u0285\u0286\x03\x02\x02\x02\u0286" +
		"\u0287\bY\b\x02\u0287\u0288\x03\x02\x02\x02\u0288\u0289\bY\t\x02\u0289" +
		"\xB4\x03\x02\x02\x02\u028A\u028B\x06Z\x03\x02\u028B\u028C\x07}\x02\x02" +
		"\u028C\u028D\x03\x02\x02\x02\u028D\u028E\bZ\n\x02\u028E\u028F\bZ\v\x02" +
		"\u028F\xB6\x03\x02\x02\x02\u0290\u0291\x07)\x02\x02\u0291\u0292\b[\f\x02" +
		"\u0292\u0293\x03\x02\x02\x02\u0293\u0294\b[\x04\x02\u0294\xB8\x03\x02" +
		"\x02\x02\u0295\u0296\x05\xEDv\x02\u0296\xBA\x03\x02\x02\x02\u0297\u0298" +
		"\x06]\x04\x02\u0298\u0299\x07}\x02\x02\u0299\u029A\x03\x02\x02\x02\u029A" +
		"\u029B\b]\n\x02\u029B\u029C\b]\v\x02\u029C\xBC\x03\x02\x02\x02\u029D\u029E" +
		"\x07$\x02\x02\u029E\u029F\b^\r\x02\u029F\u02A0\x03\x02\x02\x02\u02A0\u02A1" +
		"\b^\x04\x02\u02A1\xBE\x03\x02\x02\x02\u02A2\u02A3\x05\xF1x\x02\u02A3\xC0" +
		"\x03\x02\x02\x02\u02A4\u02A5\x05\xC3a\x02\u02A5\xC2\x03\x02\x02\x02\u02A6" +
		"\u02A7\t\x04\x02\x02\u02A7\xC4\x03\x02\x02\x02\u02A8\u02A9\t\x05\x02\x02" +
		"\u02A9\xC6\x03\x02\x02\x02\u02AA\u02AC\x05\xC5b\x02\u02AB\u02AA\x03\x02" +
		"\x02\x02\u02AC\u02AD\x03\x02\x02\x02\u02AD\u02AB\x03\x02\x02\x02\u02AD" +
		"\u02AE\x03\x02\x02\x02\u02AE\xC8\x03\x02\x02\x02\u02AF\u02B0\x072\x02" +
		"\x02\u02B0\u02B2\t\x06\x02\x02\u02B1\u02B3\x05\xD1h\x02\u02B2\u02B1\x03" +
		"\x02\x02\x02\u02B3\u02B4\x03\x02\x02\x02\u02B4\u02B2\x03\x02\x02\x02\u02B4" +
		"\u02B5\x03\x02\x02\x02\u02B5\xCA\x03\x02\x02\x02\u02B6\u02B7\x072\x02" +
		"\x02\u02B7\u02B9\t\x07\x02\x02\u02B8\u02BA\x05\xD3i\x02\u02B9\u02B8\x03" +
		"\x02\x02\x02\u02BA\u02BB\x03\x02\x02\x02\u02BB\u02B9\x03\x02\x02\x02\u02BB" +
		"\u02BC\x03\x02\x02\x02\u02BC\xCC\x03\x02\x02\x02\u02BD\u02BE\x072\x02" +
		"\x02\u02BE\u02C0\t\b\x02\x02\u02BF\u02C1\x05\xD5j\x02\u02C0\u02BF\x03" +
		"\x02\x02\x02\u02C1\u02C2\x03\x02\x02\x02\u02C2\u02C0\x03\x02\x02\x02\u02C2" +
		"\u02C3\x03\x02\x02\x02\u02C3\xCE\x03\x02\x02\x02\u02C4\u02C5\t\t\x02\x02" +
		"\u02C5\xD0\x03\x02\x02\x02\u02C6\u02C7\t\n\x02\x02\u02C7\xD2\x03\x02\x02" +
		"\x02\u02C8\u02C9\t\v\x02\x02\u02C9\xD4\x03\x02\x02\x02\u02CA\u02CB\t\f" +
		"\x02\x02\u02CB\xD6\x03\x02\x02\x02\u02CC\u02CE\x05\xD9l\x02\u02CD\u02CF" +
		"\x05\xDBm\x02\u02CE\u02CD\x03\x02\x02\x02\u02CE\u02CF\x03\x02\x02\x02" +
		"\u02CF\u02D4\x03\x02\x02\x02\u02D0\u02D1\x05\xDDn\x02\u02D1\u02D2\x05" +
		"\xDBm\x02\u02D2\u02D4\x03\x02\x02\x02\u02D3\u02CC\x03\x02\x02\x02\u02D3" +
		"\u02D0\x03\x02\x02\x02\u02D4\xD8\x03\x02\x02\x02\u02D5\u02D7\x05\xDDn" +
		"\x02\u02D6\u02D5\x03\x02\x02\x02\u02D6\u02D7\x03\x02\x02\x02\u02D7\u02D8" +
		"\x03\x02\x02\x02\u02D8\u02D9\x070\x02\x02\u02D9\u02DE\x05\xDDn\x02\u02DA" +
		"\u02DB\x05\xDDn\x02\u02DB\u02DC\x070\x02\x02\u02DC\u02DE\x03\x02\x02\x02" +
		"\u02DD\u02D6\x03\x02\x02\x02\u02DD\u02DA\x03\x02\x02\x02\u02DE\xDA\x03" +
		"\x02\x02\x02\u02DF\u02E1\t\r\x02\x02\u02E0\u02E2\x05\xDFo\x02\u02E1\u02E0" +
		"\x03\x02\x02\x02\u02E1\u02E2\x03\x02\x02\x02\u02E2\u02E3\x03\x02\x02\x02" +
		"\u02E3\u02E4\x05\xDDn\x02\u02E4\xDC\x03\x02\x02\x02\u02E5\u02E7\x05\xC5" +
		"b\x02\u02E6\u02E5\x03\x02\x02\x02\u02E7\u02E8\x03\x02\x02\x02\u02E8\u02E6" +
		"\x03\x02\x02\x02\u02E8\u02E9\x03\x02\x02\x02\u02E9\xDE\x03\x02\x02\x02" +
		"\u02EA\u02EB\t\x0E\x02\x02\u02EB\xE0\x03\x02\x02\x02\u02EC\u02EE\x05\xE3" +
		"q\x02\u02ED\u02EC\x03\x02\x02\x02\u02EE\u02EF\x03\x02\x02\x02\u02EF\u02ED" +
		"\x03\x02\x02\x02\u02EF\u02F0\x03\x02\x02\x02\u02F0\xE2\x03\x02\x02\x02" +
		"\u02F1\u02F4\n\x0F\x02\x02\u02F2\u02F4\x05\xE5r\x02\u02F3\u02F1\x03\x02" +
		"\x02\x02\u02F3\u02F2\x03\x02\x02\x02\u02F4\xE4\x03\x02\x02\x02\u02F5\u02F9" +
		"\x05\xE7s\x02\u02F6\u02F9\x05\xE9t\x02\u02F7\u02F9\x05\xEBu\x02\u02F8" +
		"\u02F5\x03\x02\x02\x02\u02F8\u02F6\x03\x02\x02\x02\u02F8\u02F7\x03\x02" +
		"\x02\x02\u02F9\xE6\x03\x02\x02\x02\u02FA\u02FB\x07^\x02\x02\u02FB\u02FC" +
		"\t\x10\x02\x02\u02FC\xE8\x03\x02\x02\x02\u02FD\u02FE\x07^\x02\x02\u02FE" +
		"\u0300\x05\xD3i\x02\u02FF\u0301\x05\xD3i\x02\u0300\u02FF\x03\x02\x02\x02" +
		"\u0300\u0301\x03\x02\x02\x02\u0301\u0303\x03\x02\x02\x02\u0302\u0304\x05" +
		"\xD3i\x02\u0303\u0302\x03\x02\x02\x02\u0303\u0304\x03\x02\x02\x02\u0304" +
		"\xEA\x03\x02\x02\x02\u0305\u0306\x07^\x02\x02\u0306\u0307\x07z\x02\x02" +
		"\u0307\u0309\x03\x02\x02\x02\u0308\u030A\x05\xD5j\x02\u0309\u0308\x03" +
		"\x02\x02\x02\u030A\u030B\x03\x02\x02\x02\u030B\u0309\x03\x02\x02\x02\u030B" +
		"\u030C\x03\x02\x02\x02\u030C\xEC\x03\x02\x02\x02\u030D\u030F\x05\xEFw" +
		"\x02\u030E\u030D\x03\x02\x02\x02\u030F\u0310\x03\x02\x02\x02\u0310\u030E" +
		"\x03\x02\x02\x02\u0310\u0311\x03\x02\x02\x02\u0311\xEE\x03\x02\x02\x02" +
		"\u0312\u0315\n\x11\x02\x02\u0313\u0315\x05\xE5r\x02\u0314\u0312\x03\x02" +
		"\x02\x02\u0314\u0313\x03\x02\x02\x02\u0315\xF0\x03\x02\x02\x02\u0316\u0318" +
		"\x05\xF3y\x02\u0317\u0316\x03\x02\x02\x02\u0318\u0319\x03\x02\x02\x02" +
		"\u0319\u0317\x03\x02\x02\x02\u0319\u031A\x03\x02\x02\x02\u031A\xF2\x03" +
		"\x02\x02\x02\u031B\u031E\n\x12\x02\x02\u031C\u031E\x05\xE5r\x02\u031D" +
		"\u031B\x03\x02\x02\x02\u031D\u031C\x03\x02\x02\x02\u031E\xF4\x03\x02\x02" +
		"\x02\u031F\u0321\x05\xF7{\x02\u0320\u031F\x03\x02\x02\x02\u0321\u0322" +
		"\x03\x02\x02\x02\u0322\u0320\x03\x02\x02\x02\u0322\u0323\x03\x02\x02\x02" +
		"\u0323\xF6\x03\x02\x02\x02\u0324\u0327\n\x0F\x02\x02\u0325\u0327\x05\xE5" +
		"r\x02\u0326\u0324\x03\x02\x02\x02\u0326\u0325\x03\x02\x02\x02\u0327\xF8" +
		"\x03\x02\x02\x02\u0328\u032A\x05\xFB}\x02\u0329\u0328\x03\x02\x02\x02" +
		"\u032A\u032B\x03\x02\x02\x02\u032B\u0329\x03\x02\x02\x02\u032B\u032C\x03" +
		"\x02\x02\x02\u032C\xFA\x03\x02\x02\x02\u032D\u0330\n\x13\x02\x02\u032E" +
		"\u0330\x05\xE5r\x02\u032F\u032D\x03\x02\x02\x02\u032F\u032E\x03\x02\x02" +
		"\x02\u0330\xFC\x03\x02\x02\x02\u0331\u0333\n\x03\x02\x02\u0332\u0331\x03" +
		"\x02\x02\x02\u0333\u0336\x03\x02\x02\x02\u0334\u0332\x03\x02\x02\x02\u0334" +
		"\u0335\x03\x02\x02\x02\u0335\xFE\x03\x02\x02\x02\u0336\u0334\x03\x02\x02" +
		"\x02%\x02\x03\x04\u0105\u0258\u025A\u0261\u0265\u026B\u0274\u02AD\u02B4" +
		"\u02BB\u02C2\u02CE\u02D3\u02D6\u02DD\u02E1\u02E8\u02EF\u02F3\u02F8\u0300" +
		"\u0303\u030B\u0310\u0314\u0319\u031D\u0322\u0326\u032B\u032F\u0334\x0E" +
		"\x02\x04\x02\x02\x05\x02\x06\x02\x02\x02\x03\x02\x03X\x02\x07\x03\x02" +
		"\x03Y\x03\x07\x04\x02\t\x03\x02\x07\x02\x02\x03[\x04\x03^\x05";
	public static readonly _serializedATN: string = Utils.join(
		[KipperLexer._serializedATNSegment0, KipperLexer._serializedATNSegment1],
		"",
	);
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!KipperLexer.__ATN) {
			KipperLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(KipperLexer._serializedATN));
		}

		return KipperLexer.__ATN;
	}
}
