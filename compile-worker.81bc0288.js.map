{"mappings":"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","sources":["build/js/playground/compile/compile-worker.ts"],"sourcesContent":["/**\n * Compiler worker responsible for handling the compilation of a Kipper program in a separate thread.\n */\n\nlet compilerInitialised: boolean = false;\nlet initFailed: boolean = false;\nlet logger: never | any;\nlet compiler: never | any;\n\n/**\n * Evaluates the passed Kipper code using specific handlers.\n * @param code The translated code to evaluate. (Must be in JavaScript)\n */\n// prettier-ignore\nasync function evalKipperCode(code: string) {\n  // Clean up any global scope entries\n  // eslint-disable-next-line no-undef\n  var __globalScope = typeof __globalScope !== \"undefined\" ? __globalScope : typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\n  var __kipper = __globalScope.__kipper = undefined;\n\n\t// Overwrite 'console.log'\n\tconst prevLog = console.log;\n\tconsole.log = (msg: string) => {\n\t\tpostMessage(String(msg)); // Make sure it's a string so we differentiate between log messages and exit codes\n\t};\n\n\t// Eval the Kipper code\n\teval(code);\n\n\t// Restore old 'console.log'\n\tconsole.log = prevLog;\n}\n\n/**\n * Initialises the Kipper Compiler.\n * @param versionToUse The version to use for the Kipper compiler.\n */\nasync function initCompiler(versionToUse: string): Promise<void> {\n\t// Variable to store the info whether the initialisation was successful\n\tinitFailed = true;\n\n\tif (\n\t\t!versionToUse.match(/^[~^]?([0-1].(?:[8-9]|([1-9][0-9])).[0-9](?:-(?:alpha|beta|rc).[\\dx*]+)?)$/g) &&\n\t\t![\"latest\", \"next\", \"alpha\", \"beta\", \"rc\"].find((v) => v === versionToUse)\n\t) {\n\t\tthrow new Error(`Invalid version number '${versionToUse}'`);\n\t}\n\n\t// In case we want to use a version bigger than 0.10.0, we need to use the new web package for the Kipper Compiler\n\tif (\n\t\tversionToUse.match(/^[~^]?[0-1].[1-9][0-9].[0-9](?:-(?:alpha|beta|rc).[\\dx*]+)?$/) ||\n\t\t[\"next\", \"alpha\", \"beta\", \"rc\"].find((v) => v === versionToUse)\n\t) {\n\t\t// eslint-disable-next-line no-undef\n\t\timportScripts(`//cdn.jsdelivr.net/npm/@kipper/web@${versionToUse}/kipper-standalone.min.js`);\n\t} else {\n\t\t// eslint-disable-next-line no-undef\n\t\timportScripts(`//cdn.jsdelivr.net/npm/@kipper/core@${versionToUse}/kipper-standalone.min.js`);\n\t}\n\n\t// Use babel if the version is between 0.8.x-x and 0.9.x-x\n\tif (\n\t\tversionToUse.match(/^[~^]?([0-1].[8-9].[0-9](?:[-.](?:[\\dx*]+|alpha|beta|rc)){0,2})$/g) ||\n\t\tversionToUse === \"latest\"\n\t) {\n\t\t// Import the babel transpiler\n\t\t// eslint-disable-next-line no-undef\n\t\timportScripts(\"//unpkg.com/@babel/standalone/babel.min.js\");\n\t}\n\n\t// The message handler for the compiler log messages - We don't handle those yet and just log them onto the console\n\tconst msgHandler = (level, msg) => {\n\t\t// @ts-ignore\n\t\t// eslint-disable-next-line no-undef\n\t\tpostMessage(`[${Kipper.getLogLevelString(level)}]: ${msg}`);\n\t};\n\n\t// Global logger for the compiler\n\t// @ts-ignore\n\t// eslint-disable-next-line no-undef\n\tlogger = new Kipper.KipperLogger(msgHandler);\n\n\t// Global compiler\n\t// @ts-ignore\n\t// eslint-disable-next-line no-undef\n\tcompiler = new Kipper.KipperCompiler(logger);\n\n\t// Set the compiler to initialised\n\tcompilerInitialised = true;\n\tinitFailed = false;\n}\n\n// Define the handler for worker messages\nonmessage = async function (event) {\n\tif (initFailed) {\n\t\t// If the initialisation already was tried once and we failed, then we can't do anything\n\t\tthrow new Error(\"Web Worker thread for the Kipper Compiler encountered fatal error during initialisation\");\n\t} else if (!compilerInitialised) {\n\t\tawait initCompiler(event.data);\n\t\treturn; // Return here since we don't want to do anything else (this was just the initialisation)\n\t}\n\n\t// Log the message that the compiler has started preparing for the compilation\n\tconsole.log(\"Received compilation request from main thread. Preparing compilation in Worker.\");\n\n\t// Print version of Kipper\n\t// @ts-ignore\n\t// eslint-disable-next-line no-undef\n\tpostMessage(`Kipper Compiler v${Kipper.version}\\n`);\n\n\t// Compile the code to TypeScript\n\tlet kipperResult: string;\n\tlet config = {};\n\ttry {\n\t\t// @ts-ignore\n\t\t// eslint-disable-next-line no-undef\n\t\tif (typeof KipperJS === \"object\" && typeof KipperJS.KipperJavaScriptTarget === \"function\") {\n\t\t\t// @ts-ignore\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tconfig.target = new KipperJS.KipperJavaScriptTarget();\n\t\t}\n\n\t\tkipperResult = (await compiler.compile(event.data, config)).write();\n\t} catch (e) {\n\t\tpostMessage(1);\n\t\tthrow e;\n\t}\n\n\t// Evaluate the code\n\ttry {\n\t\tlet execCode = kipperResult;\n\t\tif (!(\"target\" in config)) {\n\t\t\t// Transpile the code from TypeScript to JavaScript (if the Kipper compiler didn't generate JS code already)\n\t\t\t// @ts-ignore\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\texecCode = Babel.transform(kipperResult, {\n\t\t\t\tfilename: \"kipper-web-script.ts\",\n\t\t\t\tpresets: [\"env\", \"typescript\"],\n\t\t\t}).code;\n\t\t}\n\t\tconsole.log(\"[compile-worker.ts] Generated code:\\n\", execCode);\n\n\t\t// Switch to console output\n\t\tpostMessage(0);\n\n\t\tawait evalKipperCode(execCode);\n\t} catch (e) {\n\t\tpostMessage(`Encountered Runtime error:\\n  ${(<Error>e).name}: ${(<Error>e).message}`);\n\t\tpostMessage(`\\nIf this is unexpected, please report this bug to the developer on GitHub with your code snippet.`);\n\t\tpostMessage(1);\n\t\tthrow e;\n\t}\n\n\t// Return with exit code 0 (Success)\n\tpostMessage(0);\n};\n"],"names":[],"version":3,"file":"compile-worker.81bc0288.js.map","sourceRoot":"../"}